@using ASP_.NET_MVC_Day_2.Helpers
@model PaginatedList<ASP_.NET_MVC_Day_2.Models.DTO.PersonDTO>

@{
    ViewData["Title"] = "Index";
}

<h1 class="text-center">Person List</h1>

<p class="text-right">
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table table-striped table-bordered">
    <thead class="thead-dark">
        @* <tr> *@
        @*     <th>@Html.DisplayNameFor(model => model.FirstName)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.LastName)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.Gender)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.DateOfBirth)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.PhoneNumber)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.BirthPlace)</th> *@
        @*     <th>@Html.DisplayNameFor(model => model.IsGraduated)</th> *@

    <th>Actions</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Detail" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.FirstName)</a>
                </td>
                <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                <td>@Html.DisplayFor(modelItem => item.Gender)</td>
                <td>@Html.DisplayFor(modelItem => item.DateOfBirth)</td>
                <td>@Html.DisplayFor(modelItem => item.PhoneNumber)</td>
                <td>@Html.DisplayFor(modelItem => item.BirthPlace)</td>
                <td>@(item.IsGraduated ? "Yes" : "No")</td>
                <td>
                    <a asp-action="Edit" asp-controller="Person" asp-route-id="@item.Id" class="btn btn-warning btn-sm">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-between">
    <div>Page @Model.PageIndex of @Model.TotalPages</div>

    <nav>
        <ul class="pagination">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex - 1)">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-page="@(Model.PageIndex + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>